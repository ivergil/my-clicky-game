{"version":3,"sources":["components/Wrapper/Wrapper.js","components/Card/Card.js","components/Header/Header.js","components/Grid/Grid.js","App.js","index.js"],"names":["Wrapper","props","className","children","Card","style","backgroundImage","src","alt","onClick","handleClick","name","Header","id","score","Grid","state","wonders","wondersWorld","resetGame","setState","handleCorrect","newWonders","shuffleArray","console","log","handleWrong","guessedCorrect","map","wonder","newPic","clicked","i","length","j","Math","floor","random","this","key","image","Component","App","ReactDOM","render","document","getElementById"],"mappings":"qoCAIeA,EAFC,SAAAC,GAAK,OAAI,yBAAKC,UAAU,WAAWD,EAAME,W,sBCY1CC,G,MAXF,SAAAH,GACT,OACI,yBACII,MAAO,CAACC,gBAAgB,OAAD,OAAQL,EAAMM,IAAd,MACvBC,IAAKP,EAAMO,IACXN,UAAU,QACVO,QAAS,kBAAMR,EAAMS,YAAYT,EAAMU,WCCpCC,G,MAPA,SAAAX,GAAK,OAChB,yBAAKY,GAAG,kBAAkBX,UAAU,aAChC,yBAAKW,GAAG,SAAR,sBACA,yBAAKA,GAAG,cAAR,qCACA,yBAAKA,GAAG,YAAR,UAA2BZ,EAAMa,U,kOC8E1BC,E,2MA7EXC,MAAQ,CACJC,QAASC,EACTJ,MAAO,G,EAGXK,UAAY,WACR,EAAKC,SAAS,CACVN,MAAO,EACPG,QAASC,K,EAIjBG,cAAgB,SAAAC,GACZ,EAAKF,SAAS,CACVH,QAAS,EAAKM,aAAaD,GAC3BR,MAAO,EAAKE,MAAMF,MAAO,IAGJ,KAArB,EAAKE,MAAMF,QACX,EAAKK,YACLK,QAAQC,IAAI,c,EAKpBC,YAAc,WACV,EAAKP,a,EAGTT,YAAc,SAAAC,GACV,IAAIgB,GAAiB,EACfL,EAAa,EAAKN,MAAMC,QAAQW,KAAI,SAAAC,GACvC,IAAMC,E,yVAAM,IAAOD,GASnB,OARIC,EAAOnB,OAASA,IACZmB,EAAOC,UACPP,QAAQC,IAAI,+BACZK,EAAOC,SAAU,EACjBJ,GAAiB,IAIlBG,KAEXN,QAAQC,IAAI,oBAAqBE,GACjCA,EAAiB,EAAKN,cAAcC,GAAc,EAAKI,YAAYJ,I,EAGtEC,aAAe,SAAAN,GACX,IAAK,IAAIe,EAAIf,EAAQgB,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAEd,CAACf,EAAQiB,GAAIjB,EAAQe,IAA/Cf,EAAQe,GAFgC,KAE5Bf,EAAQiB,GAFoB,KAI7C,OAAQjB,G,wEAGF,IAAD,OACL,OACI,6BACI,kBAAC,EAAD,CAAQH,MAAOwB,KAAKtB,MAAMF,QAC1B,yBAAKZ,UAAU,eACX,yBAAKA,UAAU,QACdoC,KAAKtB,MAAMC,QAAQW,KAAI,SAAAC,GAChB,OAAQ,kBAAC,EAAD,CACRlB,KAAMkB,EAAOlB,KACb4B,IAAKV,EAAOlB,KACZD,YAAa,EAAKA,YAClBH,IAAKsB,EAAOW,MACZhC,IAAKqB,EAAOlB,iB,GApErB8B,aCSJC,E,iLARX,OACE,kBAAC,EAAD,KACI,kBAAC,EAAD,W,GALQD,aCDlBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4e760045.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => {\n    return(\n        <div\n            style={{backgroundImage:`url(${props.src})`}}\n            alt={props.alt}\n            className=\"block\"\n            onClick={() => props.handleClick(props.name)}>\n        </div>\n    )\n};\n\nexport default Card;","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => (\n    <div id=\"headerContainer\" className=\"container\">\n        <div id=\"title\">MLB Baseball Teams</div>\n        <div id=\"directions\">Don't click the same image twice!</div>\n        <div id=\"scoreDiv\">Score: {props.score}</div>\n    </div>\n);\nexport default Header;","import React, {Component} from \"react\";\nimport \"./Grid.css\";\nimport wondersWorld from \"../../wonders.json\";\nimport Card from \"../Card\";\nimport Header from \"../Header/Header\";\n\n\nclass Grid extends Component {\n    state = {\n        wonders: wondersWorld,\n        score: 0\n    }\n\n    resetGame = () => {\n        this.setState({\n            score: 0,\n            wonders: wondersWorld\n        })      \n    }\n\n    handleCorrect = newWonders => {\n        this.setState({\n            wonders: this.shuffleArray(newWonders), \n            score: this.state.score +1,\n        });\n        \n        if (this.state.score === 11) {\n            this.resetGame();\n            console.log(\"You won!\");\n        }\n\n    };\n\n    handleWrong = () => {\n        this.resetGame();\n    };\n\n    handleClick = name => {\n        let guessedCorrect = false;\n        const newWonders = this.state.wonders.map(wonder => {\n           const newPic = {...wonder};\n           if (newPic.name === name) {\n               if(!newPic.clicked){\n                   console.log(\"Already guessed------------\");\n                   newPic.clicked = true;\n                   guessedCorrect = true;\n               }\n               \n           }\n           return newPic;\n       })       \n       console.log(\"GUESSED CORRECT: \", guessedCorrect)\n       guessedCorrect ? this.handleCorrect(newWonders) : this.handleWrong(newWonders)\n    };\n\n    shuffleArray = wonders => {\n        for (let i = wonders.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [wonders[i], wonders[j]] = [wonders[j], wonders[i]];\n        }\n        return (wonders);\n    };\n\n    render() {\n        return(\n            <div>\n                <Header score={this.state.score}/>\n                <div className=\"gridWrapper\">\n                    <div className=\"grid\">\n                    {this.state.wonders.map(wonder => {\n                            return (<Card \n                            name={wonder.name}\n                            key={wonder.name} \n                            handleClick={this.handleClick}\n                            src={wonder.image} \n                            alt={wonder.name}  \n                        />)\n                        })}\n                    </div>\n                </div>\n            </div> \n        );\n    }\n};\n\nexport default Grid;\n    ","import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Grid from \"./components/Grid/Grid\";\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Wrapper>\n          <Grid />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}